/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or vendor/assets/stylesheets of plugins, if any, can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the top of the
 * compiled file, but it's generally better to create a new file per style scope.
 *
 *= require_self
 *= require_tree .
 */

/* import */

@import url("https://fonts.googleapis.com/css?family=Open+Sans:400,700");

@font-face {
  font-family: 'LigatureSymbols';
  src: asset-url('ligature_symbols/LigatureSymbols-2.07.eot');
  src: asset-url('ligature_symbols/LigatureSymbols-2.07.eot?#iefix') format('embedded-opentype'),
       asset-url('ligature_symbols/LigatureSymbols-2.07.woff') format('woff'),
       asset-url('ligature_symbols/LigatureSymbols-2.07.ttf') format('truetype'),
       asset-url('ligature_symbols/LigatureSymbols-2.07.svg#LigatureSymbols') format('svg');
  src: asset-url('ligature_symbols/LigatureSymbols-2.07.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

.lsf {
  font-family: 'LigatureSymbols';
  -webkit-text-rendering: optimizeLegibility;
  -moz-text-rendering: optimizeLegibility;
  -ms-text-rendering: optimizeLegibility;
  -o-text-rendering: optimizeLegibility;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-font-smoothing: antialiased;
  -ms-font-smoothing: antialiased;
  -o-font-smoothing: antialiased;
  font-smoothing: antialiased;
}

.lsf-icon:before {
  content:attr(title);
  margin-right:0.3em;
  font-size:130%;
  font-family: 'LigatureSymbols';
  -webkit-text-rendering: optimizeLegibility;
  -moz-text-rendering: optimizeLegibility;
  -ms-text-rendering: optimizeLegibility;
  -o-text-rendering: optimizeLegibility;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-font-smoothing: antialiased;
  -ms-font-smoothing: antialiased;
  -o-font-smoothing: antialiased;
  font-smoothing: antialiased;
}

/* common */

$gap: 20px;

$white: #fff;
$gray-light: #eee;
$gray: #aaa;
$gray-dark: #666;
$black: #000;

$font-color: $black;
$font-family: 'Open Sans', Helvetica, Arial, sans-serif;
$font-size: 14px;
$font-size-small: $font-size*0.88;
$font-size-large: $font-size*1.33;
$line-height: 1.66;
$line-height-small: $line-height*0.8;
$letter-spacing: 0;

@mixin font($type: default) {
  @if $type == default {
    color: $font-color;
    font-size: $font-size;
    line-height: $line-height;
    letter-spacing: $letter-spacing;
  } @else if $type == reset {
    color: $font-color;
    font-size: $font-size;
    line-height: 1;
    letter-spacing: $letter-spacing;
  } @else if $type == link {
    color: $font-color;
    text-decoration: none !important;
    background: none;
  } @else if $type == bubble {
    color: $font-color;
    font-size: $font-size-small;
    line-height: $line-height-small;
    letter-spacing: $letter-spacing;
  } @else if $type == header {
    color: $font-color !important;
    font-size: $font-size-large !important;
    font-weight: normal;
    line-height: $line-height !important;
    letter-spacing: $letter-spacing;
  } @else if $type == footer {
    color: $font-color !important;
    font-size: $font-size-small !important;
    line-height: $line-height !important;
    letter-spacing: $letter-spacing;
  }
  
  font-family: $font-family;
}

@mixin link {
  @include font(link);
  
  &:hover {
    @include font(link);
  }
}

@mixin border-radius($size: small) {
  @if $size == small {
    @each $prefix in -webkit-, -moz-, -ms-, -o-, '' {  
      #{$prefix}border-radius: $gap/4;
    }
  } @else if $size == large {
	  @each $prefix in -webkit-, -moz-, -ms-, -o-, '' {  
      #{$prefix}border-radius: $gap/2;
    } 
  }
}

.bubble {
  position: relative;
  padding: $gap/2;
  margin: $gap;
	
	@include font(bubble);
	background-color: $gray-light;
	@include border-radius;
	
	&.center { text-align: center; }
	&.right { text-align: right; }
	
	&:after {
    content: "";
    position: absolute;
    bottom: -18px;
    left: 36px;
    width: 0;
    height: 0;
    
    border-top: 18px solid #eeeeee;
    border-right: 24px solid transparent;
  }
}

/* detail */

html {
	font-size: $font-size;
	-webkit-text-size-adjust: 100%;
	-ms-text-size-adjust: 100%;
}

body {	
	@include font(reset);
}

a {
	@include link;
}

h1, h2, h3, h4, h5, h6, h7 {
	font-weight: normal;
}

input[type='text'],
input[type='email'],
input[type='password'],
input[type='search'],
input[type='number'],
textarea {
  width: 100%;
  padding: 0;
  margin-bottom: 2px;
  
	@include font;
	border: 0;
	background-color: #fff;
	border-top: 1px solid rgba(0, 0, 0, 0.3);
	border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

input[type='text']:focus,
input[type='email']:focus,
input[type='password']:focus,
input[type='search']:focus,
input[type='number']:focus,
textarea:focus {
  background-color: #fff;
}






h1, h2, h3, h4, h5, h6 {
  margin: 0;
  
  @include font(header);
}

a.btn-primary:link,
a.btn-primary:visited,
a.btn-danger:link,
a.btn-danger:visited,
a.btn-warning:link,
a.btn-warning:visited,
a.btn-success:link,
a.btn-success:visited,
a.btn-info:link,
a.btn-info:visited,
a.btn-inverse:link,
a.btn-inverse:visited,
{
  color: #fff
}

a.brand:hover {
  background-color: transparent;
}

.more {
  text-align: right;
}

.pagination {
  text-align: center;

  a {
    text-decoration: none !important;
  }
  a:hover {
    color: #000;
  }
}

.navbar {
  padding: $gap 0;
  margin: 0 !important;

  .navbar-inner {
    background: none;
    box-shadow: none;
    border-radius: 0;
    border: 0;
  }
}

.container-fluid {
  h1 {
    padding: $gap 0;

    @include font(header);
  }
}

table {
  .graph {
    width: 250px;

    img {
      width: 250px;
    }
  }
}

footer {
  @include font(footer);
}
